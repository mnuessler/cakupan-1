<?xml version="1.0"?>
<project basedir="." name="cakupan" default="test">

    <property name="ant.test.lib" value="ant-testutil.jar"/>
    <property name="report.dir"   value="report"/>
    <property name="junit.out.dir.xml"  value="${report.dir}/junit/xml"/>
    <property name="junit.out.dir.html" value="${report.dir}/junit/html"/>
    <property name="instrmtxslt.dir" value="${report.dir}/cakupan"/>
	<property name="src.dir" value="src"/>
	<property name="bin.dir" value="bin"/>
	<property name="lib.dir" value="lib"/>
	<property name="test.dir" value="test"/>
    <property name="notices.dir" value="notices"/>
    <property name="classes.dir" value="classes"/>
    <property file="version.properties" />

	<path id="classpath.run">
        <path path="${java.class.path}"/>
        <path location="${ant.project.name}-${version}.jar"/>
    </path>

    <path id="classpath.test">
        <path refid="classpath.run"/>
        <path refid="classpath.xslt"/>
        <path location="${ant.test.lib}"/>
        <path location="${classes.dir}"/>
    </path>

    <path id="classpath.xslt">
        <pathelement location="${lib.dir}/commons-lang-2.1.jar" />
        <pathelement location="${lib.dir}/xstream-1.4.3.jar" />
        <pathelement location="${lib.dir}/xpp3-1.1.4c.jar" />
        <pathelement location="${lib.dir}/saxon9.jar" />
        <pathelement location="${lib.dir}/xalan-2.6.0.jar" />
        <pathelement location="${lib.dir}/${ant.test.lib}"/>
        <pathelement location="${lib.dir}/junit-4.11.jar"/>
     </path>

	<!-- Cakupan - xslt coverage tasks -->
	<taskdef classpath="${classes.dir}" resource="cakupantasks.properties" classpathref="classpath.xslt" />

	<target name="compile" depends="clean" description="Compiles the Task">
        <mkdir dir="${classes.dir}"/>
        <javac target="1.5" debuglevel="lines,source" srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath.xslt"/>
    </target>

	<target name="compileTest" depends="copypropfiles" description="Compiles the tests">
        <javac target="1.5" debuglevel="lines,source" srcdir="${test.dir}" destdir="${classes.dir}" classpathref="classpath.xslt"/>
    </target>


    <target name="clean" description="Delete all generated files">
        <delete failonerror="false" includeEmptyDirs="true">
            <fileset dir="." includes="${ant.project.name}-${version}.jar"/>
            <fileset dir="${classes.dir}"/>
            <fileset dir="${report.dir}"/>
        </delete>
    </target>

    <target name="deleteJar" description="Delete all generated Jars">
        <delete failonerror="false" includeEmptyDirs="true">
            <fileset dir="." includes="${ant.project.name}-*.jar,${ant.project.name}-*.zip"/>
        </delete>
    </target>

    <target name="jar" description="JARs the Task" depends="compile,copypropfiles">
        <jar destfile="${ant.project.name}-${version}.jar" basedir="${classes.dir}">
        	<fileset dir="." includes="${notices.dir}/**"/>
        	</jar>
    </target>

    <target name="zip" description="JARs the Task" depends="deleteJar, jar">
        <zip destfile="${ant.project.name}-${version}.zip">
        	<fileset dir="${classes.dir}" includes="**"/>
        	<fileset dir="${src.dir}" includes="**/*.java"/>
        	<fileset dir="." includes="${notices.dir}/**"/>
        	<fileset dir="." includes="${lib.dir}/**"/>
        	<fileset dir="." includes="${ant.project.name}-${version}.jar"/>
        </zip>
    </target>

    <target name="jar_src" description="JARs the Task with sources" depends="compile,copypropfiles">
        <jar destfile="${ant.project.name}-src-${version}.jar" basedir="${classes.dir}">
        	<fileset dir="${src.dir}" includes="**/*.java"/>
        	<fileset dir="." includes="${notices.dir}/**"/>
        	</jar>
    </target>

	<target name="copypropfiles" description="copy xtra files to classes">
        <copy todir="${classes.dir}">
             <fileset dir="${src.dir}" includes="**/*.css,**/*.png,**/*.js,**/*.properties,**/*.xsl,**/*.xslt" />
         </copy>
    </target>


    <target name="junit" description="Runs the unit tests">
        <delete dir="${junit.out.dir.xml}"/>
        <mkdir  dir="${junit.out.dir.xml}"/>
        <junit printsummary="yes" haltonfailure="no">
			<sysproperty
				key="javax.xml.transform.TransformerFactory"
				value="com.cakupan.xslt.transform.SaxonCakupanTransformerInstrumentFactoryImpl"/>
			<!--sysproperty
				key="javax.xml.transform.TransformerFactory"
				value="com.cakupan.xslt.transform.XalanTransformerInstrumentFactoryImpl" /-->
			<sysproperty
					key="cakupan.dir"
					value="${instrmtxslt.dir}"/>
            <classpath refid="classpath.test"/>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${junit.out.dir.xml}">
                <fileset dir="${test.dir}" includes="**/*Test.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="junitreport" description="Create a report for the rest result">
        <mkdir dir="${junit.out.dir.html}"/>
        <junitreport todir="${junit.out.dir.html}">
            <fileset dir="${junit.out.dir.xml}">
                <include name="*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.out.dir.html}"/>
        </junitreport>
    </target>

    <target name="make" depends="clean, compile" />

    <target name="test"
            depends="compile,compileTest,instrumentCakupan,junit,junitreport, reportCakupan, emmaReportCakupan"
            description="Runs unit tests and creates a XSLT coverage and Junit report"
    />

	<!-- instrumentation of the XSLTs, fileset for retrieving the XSLTs and destdir for writing the trace and instrumenting files-->
	<target name="instrumentCakupan">
        <cakupan-instrument destdir="${instrmtxslt.dir}">
         	<fileset dir="../cakupan/test" includes="**/*.xsl"/>
        </cakupan-instrument>
    </target>

	<!-- merging intrumentation data of different modules-->
	<target name="mergeCakupan">
        <cakupan-merge destdir="report/merged/cakupan">
              <fileset dir="${instrmtxslt.dir}"/>
       	</cakupan-merge>
    </target>

		<!-- building the coverage report-->
	    <target name="reportCakupan">
	        <cakupan-report destdir="report/cakupan"/>
	    </target>

		<!-- building the emma report-->
	    <target name="emmaReportCakupan">
	        <cakupan-emma-report destdir="report/cakupan"/>
	    </target>

	<!-- building the coverage report, wrong dir-->
    <target name="reportCakupanError">
        <cakupan-report destdir="report/cakupa"/>
    </target>

</project>
